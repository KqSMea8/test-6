<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($spe284ea, $sp3540cc) { $this->captcha_id = $spe284ea; $this->private_key = $sp3540cc; } public function pre_process($sp203bcb = null) { $spaf19c1 = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($sp203bcb != null and is_string($sp203bcb)) { $spaf19c1 = $spaf19c1 . '&user_id=' . $sp203bcb; } $sp1913fe = $this->send_request($spaf19c1); if (strlen($sp1913fe) != 32) { $this->failback_process(); return 0; } $this->success_process($sp1913fe); return 1; } private function success_process($sp1913fe) { $sp1913fe = md5($sp1913fe . $this->private_key); $sp594fbb = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp1913fe); $this->response = $sp594fbb; } private function failback_process() { $spf338db = md5(rand(0, 100)); $spbef1ed = md5(rand(0, 100)); $sp1913fe = $spf338db . substr($spbef1ed, 0, 2); $sp594fbb = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp1913fe); $this->response = $sp594fbb; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp1913fe, $sp0529e2, $spfe4318, $sp203bcb = null) { if (!$this->check_validate($sp1913fe, $sp0529e2)) { return 0; } $sp631d11 = array('seccode' => $spfe4318, 'sdk' => self::GT_SDK_VERSION); if ($sp203bcb != null and is_string($sp203bcb)) { $sp631d11['user_id'] = $sp203bcb; } $spaf19c1 = 'http://api.geetest.com/validate.php'; $spc17453 = $this->post_request($spaf19c1, $sp631d11); if ($spc17453 == md5($spfe4318)) { return 1; } else { if ($spc17453 == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp1913fe, $sp0529e2, $spfe4318) { if ($sp0529e2) { $spd77a65 = explode('_', $sp0529e2); try { $sp8b89e3 = $this->decode_response($sp1913fe, $spd77a65['0']); $spba3fe6 = $this->decode_response($sp1913fe, $spd77a65['1']); $sp140888 = $this->decode_response($sp1913fe, $spd77a65['2']); $sp987920 = $this->get_failback_pic_ans($spba3fe6, $sp140888); $sp9f0d85 = abs($sp8b89e3 - $sp987920); } catch (\Exception $spa9e936) { return 1; } if ($sp9f0d85 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp1913fe, $sp0529e2) { if (strlen($sp0529e2) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp1913fe) != $sp0529e2) { return false; } return true; } private function send_request($spaf19c1) { if (function_exists('curl_exec')) { $sp03f466 = curl_init(); curl_setopt($sp03f466, CURLOPT_URL, $spaf19c1); curl_setopt($sp03f466, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp03f466, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($sp03f466, CURLOPT_RETURNTRANSFER, 1); $sp631d11 = curl_exec($sp03f466); if (curl_errno($sp03f466)) { $spca1206 = sprintf('curl[%s] error[%s]', $spaf19c1, curl_errno($sp03f466) . ':' . curl_error($sp03f466)); $this->triggerError($spca1206); } curl_close($sp03f466); } else { $sp04eb69 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spaea3e1 = stream_context_create($sp04eb69); $sp631d11 = file_get_contents($spaf19c1, false, $spaea3e1); } return $sp631d11; } private function post_request($spaf19c1, $spc1f246 = '') { if (!$spc1f246) { return false; } $sp631d11 = http_build_query($spc1f246); if (function_exists('curl_exec')) { $sp03f466 = curl_init(); curl_setopt($sp03f466, CURLOPT_URL, $spaf19c1); curl_setopt($sp03f466, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp03f466, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp03f466, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$spc1f246) { curl_setopt($sp03f466, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($sp03f466, CURLOPT_POST, 1); curl_setopt($sp03f466, CURLOPT_POSTFIELDS, $sp631d11); } $sp631d11 = curl_exec($sp03f466); if (curl_errno($sp03f466)) { $spca1206 = sprintf('curl[%s] error[%s]', $spaf19c1, curl_errno($sp03f466) . ':' . curl_error($sp03f466)); $this->triggerError($spca1206); } curl_close($sp03f466); } else { if ($spc1f246) { $sp04eb69 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($sp631d11) . '
', 'content' => $sp631d11, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spaea3e1 = stream_context_create($sp04eb69); $sp631d11 = file_get_contents($spaf19c1, false, $spaea3e1); } } return $sp631d11; } private function decode_response($sp1913fe, $spe68576) { if (strlen($spe68576) > 100) { return 0; } $spb5c5a0 = array(); $sp357c75 = array(); $sp5a1daf = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $sp761f2d = 0; $spb12888 = 0; $sp3e20cd = str_split($sp1913fe); $sp7648af = str_split($spe68576); for ($sp3deb2c = 0; $sp3deb2c < strlen($sp1913fe); $sp3deb2c++) { $sp795ea1 = $sp3e20cd[$sp3deb2c]; if (in_array($sp795ea1, $sp357c75)) { continue; } else { $spd77a65 = $sp5a1daf[$sp761f2d % 5]; array_push($sp357c75, $sp795ea1); $sp761f2d++; $spb5c5a0[$sp795ea1] = $spd77a65; } } for ($spbb97a7 = 0; $spbb97a7 < strlen($spe68576); $spbb97a7++) { $spb12888 += $spb5c5a0[$sp7648af[$spbb97a7]]; } $spb12888 = $spb12888 - $this->decodeRandBase($sp1913fe); return $spb12888; } private function get_x_pos_from_str($spa5752c) { if (strlen($spa5752c) != 5) { return 0; } $sp4ed7e8 = 0; $sp0d3468 = 200; $sp4ed7e8 = base_convert($spa5752c, 16, 10); $sp594fbb = $sp4ed7e8 % $sp0d3468; $sp594fbb = $sp594fbb < 40 ? 40 : $sp594fbb; return $sp594fbb; } private function get_failback_pic_ans($spa555ed, $spb4ee2c) { $sp95e414 = substr(md5($spa555ed), 0, 9); $sp7ea52f = substr(md5($spb4ee2c), 10, 9); $sp32df82 = ''; for ($sp3deb2c = 0; $sp3deb2c < 9; $sp3deb2c++) { if ($sp3deb2c % 2 == 0) { $sp32df82 = $sp32df82 . $sp95e414[$sp3deb2c]; } elseif ($sp3deb2c % 2 == 1) { $sp32df82 = $sp32df82 . $sp7ea52f[$sp3deb2c]; } } $spa5580e = substr($sp32df82, 4, 5); $sp987920 = $this->get_x_pos_from_str($spa5580e); return $sp987920; } private function decodeRandBase($sp1913fe) { $sp03a3ab = substr($sp1913fe, 32, 2); $sp12b30f = array(); for ($sp3deb2c = 0; $sp3deb2c < strlen($sp03a3ab); $sp3deb2c++) { $sp8e9bf4 = ord($sp03a3ab[$sp3deb2c]); $sp594fbb = $sp8e9bf4 > 57 ? $sp8e9bf4 - 87 : $sp8e9bf4 - 48; array_push($sp12b30f, $sp594fbb); } $spaebf26 = $sp12b30f['0'] * 36 + $sp12b30f['1']; return $spaebf26; } private function triggerError($spca1206) { } }