<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { public static function orderSuccess($sp871a53, callable $spf1d3f1) { $sp203bcb = $sp871a53->user_id; $sp4adb82 = $sp871a53->income; try { return DB::transaction(function () use($sp871a53, $sp203bcb, $sp4adb82, $spf1d3f1) { if ($spf1d3f1() === Order::STATUS_SUCCESS) { $sp47ffde = User::where('id', $sp203bcb)->lockForUpdate()->firstOrFail(); $sp47ffde->m_all += $sp4adb82; $sp47ffde->saveOrFail(); $sp278837 = new FundRecord(); $sp278837->user_id = $sp203bcb; $sp278837->type = FundRecord::TYPE_IN; $sp278837->amount = $sp4adb82; $sp278837->balance = $sp47ffde->m_balance; $sp278837->remark = '订单#' . $sp871a53->order_no; $sp278837->order_id = $sp871a53->id; $sp278837->saveOrFail(); } return true; }); } catch (\Throwable $spa9e936) { $sp32b59e = 'FundHelper.orderSuccess error, user_id:' . $sp203bcb . ',amount:' . $sp4adb82 . ',order_no:' . $sp871a53->order_no; \Illuminate\Support\Facades\Log::error($sp32b59e . ' with exception:', array('Exception' => $spa9e936)); return false; } } public static function orderFreeze($sp871a53, $spa0561d) { if ($sp871a53->status === Order::STATUS_FROZEN || $sp871a53->status === Order::STATUS_REFUND) { return true; } $sp203bcb = $sp871a53->user_id; try { return DB::transaction(function () use($sp871a53, $sp203bcb, $spa0561d) { $sp871a53->status = \App\Order::STATUS_FROZEN; $sp871a53->frozen_reason = $spa0561d; $sp871a53->saveOrFail(); $sp47ffde = User::where('id', $sp203bcb)->lockForUpdate()->firstOrFail(); if ($sp871a53->cards()->exists()) { $sp47ffde->m_frozen += $sp871a53->income; $sp47ffde->saveOrFail(); $sp278837 = new FundRecord(); $sp278837->user_id = $sp203bcb; $sp278837->type = FundRecord::TYPE_OUT; $sp278837->amount = -$sp871a53->income; $sp278837->balance = $sp47ffde->m_balance; $sp278837->remark = $spa0561d . ', 冻结订单#' . $sp871a53->order_no; $sp278837->order_id = $sp871a53->id; $sp278837->saveOrFail(); } else { if ($sp871a53->paid_at === NULL) { $sp4afcbb = '未付款'; } else { $sp4afcbb = '未发货'; } $sp278837 = new FundRecord(); $sp278837->user_id = $sp203bcb; $sp278837->type = FundRecord::TYPE_OUT; $sp278837->amount = 0; $sp278837->balance = $sp47ffde->m_balance; $sp278837->remark = $spa0561d . ', 冻结订单(' . $sp4afcbb . ')#' . $sp871a53->order_no; $sp278837->order_id = $sp871a53->id; $sp278837->saveOrFail(); } return true; }); } catch (\Throwable $spa9e936) { $sp32b59e = 'FundHelper.orderFreeze error, user_id:' . $sp203bcb . ',amount:' . $sp871a53->income; if ($sp871a53) { $sp32b59e .= ',order_no:' . $sp871a53->order_no; } else { $sp32b59e .= ',order_no: null'; } \Illuminate\Support\Facades\Log::error($sp32b59e . ' with exception:', array('Exception' => $spa9e936)); return false; } } public static function orderUnfreeze($sp871a53, $spab5637, callable $spbfc338 = null, &$spa50644 = null) { $sp203bcb = $sp871a53->user_id; try { return DB::transaction(function () use($sp871a53, $sp203bcb, $spab5637, $spbfc338, &$spa50644) { if ($spbfc338 !== null && $spbfc338() === false) { return false; } if ($sp871a53->status !== Order::STATUS_FROZEN) { $spa50644 = $sp871a53->status; return true; } $sp47ffde = User::where('id', $sp203bcb)->lockForUpdate()->firstOrFail(); if ($sp871a53->cards()->exists()) { $sp871a53->status = \App\Order::STATUS_SUCCESS; $sp47ffde->m_frozen -= $sp871a53->income; $sp47ffde->saveOrFail(); $sp278837 = new FundRecord(); $sp278837->user_id = $sp203bcb; $sp278837->type = FundRecord::TYPE_IN; $sp278837->amount = $sp871a53->income; $sp278837->balance = $sp47ffde->m_balance; $sp278837->remark = $spab5637 . ', 解冻订单#' . $sp871a53->order_no; $sp278837->order_id = $sp871a53->id; $sp278837->saveOrFail(); } else { if ($sp871a53->paid_at === NULL) { $sp871a53->status = \App\Order::STATUS_UNPAY; $sp4afcbb = '未付款'; } else { $sp871a53->status = \App\Order::STATUS_PAID; $sp4afcbb = '未发货'; } $sp278837 = new FundRecord(); $sp278837->user_id = $sp203bcb; $sp278837->type = FundRecord::TYPE_IN; $sp278837->amount = 0; $sp278837->balance = $sp47ffde->m_balance; $sp278837->remark = $spab5637 . ', 解冻订单(' . $sp4afcbb . ')#' . $sp871a53->order_no; $sp278837->order_id = $sp871a53->id; $sp278837->saveOrFail(); } $spa50644 = $sp871a53->status; $sp871a53->saveOrFail(); return true; }); } catch (\Throwable $spa9e936) { $sp32b59e = 'FundHelper.orderUnfreeze error, user_id:' . $sp203bcb . ',amount:' . $sp871a53->income; if ($sp871a53) { $sp32b59e .= ',order_no:' . $sp871a53->order_no; } else { $sp32b59e .= ',order_no: null'; } \Illuminate\Support\Facades\Log::error($sp32b59e . ' with exception:', array('Exception' => $spa9e936)); return false; } } }