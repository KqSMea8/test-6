<?php
class HttpClient { var $host; var $port; var $path; var $method; var $postdata = ''; var $cookies = array(); var $referer; var $accept = 'text/xml,application/xml,application/xhtml+xml,text/html,text/plain,image/png,image/jpeg,image/gif,*/*'; var $accept_encoding = 'gzip'; var $accept_language = 'en-us'; var $user_agent = 'Incutio HttpClient v0.9'; var $timeout = 20; var $use_gzip = true; var $persist_cookies = true; var $persist_referers = true; var $debug = false; var $handle_redirects = true; var $max_redirects = 5; var $headers_only = false; var $username; var $password; var $status; var $headers = array(); var $content = ''; var $errormsg; var $redirect_count = 0; var $cookie_host = ''; function __construct($sp5b4d15, $spf60153 = 80) { $this->host = $sp5b4d15; $this->port = $spf60153; } function get($spd0fd48, $sp631d11 = false) { $this->path = $spd0fd48; $this->method = 'GET'; if ($sp631d11) { $this->path .= '?' . $this->buildQueryString($sp631d11); } return $this->doRequest(); } function post($spd0fd48, $sp631d11) { $this->path = $spd0fd48; $this->method = 'POST'; $this->postdata = $this->buildQueryString($sp631d11); return $this->doRequest(); } function buildQueryString($sp631d11) { $spaa324b = ''; if (is_array($sp631d11)) { foreach ($sp631d11 as $spb5c5a0 => $spe3999d) { if (is_array($spe3999d)) { foreach ($spe3999d as $sp5daa1b) { $spaa324b .= urlencode($spb5c5a0) . '=' . $sp5daa1b . '&'; } } else { $spaa324b .= urlencode($spb5c5a0) . '=' . $spe3999d . '&'; } } $spaa324b = substr($spaa324b, 0, -1); } else { $spaa324b = $sp631d11; } return $spaa324b; } function doRequest() { if (!($sp297a75 = @fsockopen($this->host, $this->port, $sp2455b1, $sp1381e6, $this->timeout))) { switch ($sp2455b1) { case -3: $this->errormsg = 'Socket creation failed (-3)'; break; case -4: $this->errormsg = 'DNS lookup failure (-4)'; break; case -5: $this->errormsg = 'Connection refused or timed out (-5)'; break; default: $this->errormsg = 'Connection failed (' . $sp2455b1 . ')'; $this->errormsg .= ' ' . $sp1381e6; $this->debug($this->errormsg); } return false; } socket_set_timeout($sp297a75, $this->timeout); $sp2f63b0 = $this->buildRequest(); $this->debug('Request', $sp2f63b0); fwrite($sp297a75, $sp2f63b0); $this->headers = array(); $this->content = ''; $this->errormsg = ''; $spdc8a51 = true; $spd8f26e = true; while (!feof($sp297a75)) { $spcdf3ae = fgets($sp297a75, 4096); if ($spd8f26e) { $spd8f26e = false; if (!preg_match('/HTTP\\/(\\d\\.\\d)\\s*(\\d+)\\s*(.*)/', $spcdf3ae, $sp65c648)) { $this->errormsg = 'Status code line invalid: ' . htmlentities($spcdf3ae); $this->debug($this->errormsg); return false; } $this->status = $sp65c648[2]; $this->debug(trim($spcdf3ae)); continue; } if ($spdc8a51) { if (trim($spcdf3ae) == '') { $spdc8a51 = false; $this->debug('Received Headers', $this->headers); if ($this->headers_only) { break; } continue; } if (!preg_match('/([^:]+):\\s*(.*)/', $spcdf3ae, $sp65c648)) { continue; } $spb5c5a0 = strtolower(trim($sp65c648[1])); $spe3999d = trim($sp65c648[2]); if (isset($this->headers[$spb5c5a0])) { if (is_array($this->headers[$spb5c5a0])) { $this->headers[$spb5c5a0][] = $spe3999d; } else { $this->headers[$spb5c5a0] = array($this->headers[$spb5c5a0], $spe3999d); } } else { $this->headers[$spb5c5a0] = $spe3999d; } continue; } $this->content .= $spcdf3ae; } fclose($sp297a75); if (isset($this->headers['content-encoding']) && $this->headers['content-encoding'] == 'gzip') { $this->debug('Content is gzip encoded, unzipping it'); $this->content = substr($this->content, 10); $this->content = gzinflate($this->content); } if ($this->persist_cookies && isset($this->headers['set-cookie']) && $this->host == $this->cookie_host) { $sp4d6a35 = $this->headers['set-cookie']; if (!is_array($sp4d6a35)) { $sp4d6a35 = array($sp4d6a35); } foreach ($sp4d6a35 as $spf4f2b2) { if (preg_match('/([^=]+)=([^;]+);/', $spf4f2b2, $sp65c648)) { $this->cookies[$sp65c648[1]] = $sp65c648[2]; } } $this->cookie_host = $this->host; } if ($this->persist_referers) { $this->debug('Persisting referer: ' . $this->getRequestURL()); $this->referer = $this->getRequestURL(); } if ($this->handle_redirects) { if (++$this->redirect_count >= $this->max_redirects) { $this->errormsg = 'Number of redirects exceeded maximum (' . $this->max_redirects . ')'; $this->debug($this->errormsg); $this->redirect_count = 0; return false; } $sp028d5e = isset($this->headers['location']) ? $this->headers['location'] : ''; $spb98c70 = isset($this->headers['uri']) ? $this->headers['uri'] : ''; if ($sp028d5e || $spb98c70) { $spaf19c1 = parse_url($sp028d5e . $spb98c70); return $this->get($spaf19c1['path']); } } return true; } function buildRequest() { $sp71f60e = array(); $sp71f60e[] = "{$this->method} {$this->path} HTTP/1.0"; $sp71f60e[] = "Host: {$this->host}"; $sp71f60e[] = "User-Agent: {$this->user_agent}"; $sp71f60e[] = "Accept: {$this->accept}"; if ($this->use_gzip) { $sp71f60e[] = "Accept-encoding: {$this->accept_encoding}"; } $sp71f60e[] = "Accept-language: {$this->accept_language}"; if ($this->referer) { $sp71f60e[] = "Referer: {$this->referer}"; } if ($this->cookies) { $spf4f2b2 = 'Cookie: '; foreach ($this->cookies as $spb5c5a0 => $spd77a65) { $spf4f2b2 .= "{$spb5c5a0}={$spd77a65}; "; } $sp71f60e[] = $spf4f2b2; } if ($this->username && $this->password) { $sp71f60e[] = 'Authorization: BASIC ' . base64_encode($this->username . ':' . $this->password); } if ($this->postdata) { $sp71f60e[] = 'Content-Type: application/x-www-form-urlencoded'; $sp71f60e[] = 'Content-Length: ' . strlen($this->postdata); } $sp2f63b0 = implode('
', $sp71f60e) . '

' . $this->postdata; return $sp2f63b0; } function getStatus() { return $this->status; } function getContent() { return $this->content; } function getHeaders() { return $this->headers; } function getHeader($sp3ec8c0) { $sp3ec8c0 = strtolower($sp3ec8c0); if (isset($this->headers[$sp3ec8c0])) { return $this->headers[$sp3ec8c0]; } else { return false; } } function getError() { return $this->errormsg; } function getCookies() { return $this->cookies; } function getRequestURL() { $spaf19c1 = 'http://' . $this->host; if ($this->port != 80) { $spaf19c1 .= ':' . $this->port; } $spaf19c1 .= $this->path; return $spaf19c1; } function setUserAgent($spe68576) { $this->user_agent = $spe68576; } function setAuthorization($sp59ab63, $sp4f77a3) { $this->username = $sp59ab63; $this->password = $sp4f77a3; } function setCookies($spd7a9e1) { $this->cookies = $spd7a9e1; } function useGzip($spc4454d) { $this->use_gzip = $spc4454d; } function setPersistCookies($spc4454d) { $this->persist_cookies = $spc4454d; } function setPersistReferers($spc4454d) { $this->persist_referers = $spc4454d; } function setHandleRedirects($spc4454d) { $this->handle_redirects = $spc4454d; } function setMaxRedirects($sp936a13) { $this->max_redirects = $sp936a13; } function setHeadersOnly($spc4454d) { $this->headers_only = $spc4454d; } function setDebug($spc4454d) { $this->debug = $spc4454d; } function quickGet($spaf19c1) { $sp5cd69d = parse_url($spaf19c1); $sp5b4d15 = $sp5cd69d['host']; $spf60153 = isset($sp5cd69d['port']) ? $sp5cd69d['port'] : 80; $spd0fd48 = isset($sp5cd69d['path']) ? $sp5cd69d['path'] : '/'; if (isset($sp5cd69d['query'])) { $spd0fd48 .= '?' . $sp5cd69d['query']; } $sp2fe5ce = new HttpClient($sp5b4d15, $spf60153); if (!$sp2fe5ce->get($spd0fd48)) { return false; } else { return $sp2fe5ce->getContent(); } } static function quickPost($spaf19c1, $sp631d11) { $sp5cd69d = parse_url($spaf19c1); $sp5b4d15 = $sp5cd69d['host']; $spf60153 = isset($sp5cd69d['port']) ? $sp5cd69d['port'] : 80; $spd0fd48 = isset($sp5cd69d['path']) ? $sp5cd69d['path'] : '/'; $sp2fe5ce = new HttpClient($sp5b4d15, $spf60153); if (!$sp2fe5ce->post($spd0fd48, $sp631d11)) { return false; } else { return $sp2fe5ce->getContent(); } } function debug($sp32b59e, $sp176c11 = false) { if ($this->debug) { print '<div style="border: 1px solid red; padding: 0.5em; margin: 0.5em;"><strong>HttpClient Debug:</strong> ' . $sp32b59e; if ($sp176c11) { ob_start(); print_r($sp176c11); $sp154c4a = htmlentities(ob_get_contents()); ob_end_clean(); print '<pre>' . $sp154c4a . '</pre>'; } print '</div>'; } } }