<?php
ini_set('date.timezone', 'Asia/Shanghai'); error_reporting(E_ERROR); require_once '../lib/WxPay.Api.php'; require_once '../lib/WxPay.Notify.php'; require_once 'log.php'; $sp08ba31 = new CLogFileHandler('../logs/' . date('Y-m-d') . '.log'); $sp72b4d7 = Log::Init($sp08ba31, 15); class PayNotifyCallBack extends WxPayNotify { public function Queryorder($sp8b5f2d) { $spf7fa80 = new WxPayOrderQuery(); $spf7fa80->SetTransaction_id($sp8b5f2d); $sp594fbb = WxPayApi::orderQuery($spf7fa80); Log::DEBUG('query:' . json_encode($sp594fbb)); if (array_key_exists('return_code', $sp594fbb) && array_key_exists('result_code', $sp594fbb) && $sp594fbb['return_code'] == 'SUCCESS' && $sp594fbb['result_code'] == 'SUCCESS') { return true; } return false; } public function NotifyProcess($sp631d11, &$sp32b59e) { Log::DEBUG('call back:' . json_encode($sp631d11)); $spc534bf = array(); if (!array_key_exists('transaction_id', $sp631d11)) { $sp32b59e = '输入参数不正确'; return false; } if (!$this->Queryorder($sp631d11['transaction_id'])) { $sp32b59e = '订单查询失败'; return false; } return true; } } Log::DEBUG('begin notify'); $spb965e6 = new PayNotifyCallBack(); $spb965e6->Handle(false);