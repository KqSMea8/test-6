<?php
require_once '../lib/WxPay.Api.php'; class JsApiPay { public $data = null; public function GetOpenid() { if (!isset($_GET['code'])) { $sp159484 = urlencode('http://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'] . $_SERVER['QUERY_STRING']); $spaf19c1 = $this->__CreateOauthUrlForCode($sp159484); Header("Location: {$spaf19c1}"); die; } else { $spa40a85 = $_GET['code']; $sp7a1bcc = $this->getOpenidFromMp($spa40a85); return $sp7a1bcc; } } public function GetJsApiParameters($sp5ea06f) { if (!array_key_exists('appid', $sp5ea06f) || !array_key_exists('prepay_id', $sp5ea06f) || $sp5ea06f['prepay_id'] == '') { throw new WxPayException('参数错误'); } $spbac7fa = new WxPayJsApiPay(); $spbac7fa->SetAppid($sp5ea06f['appid']); $spf5d4de = time(); $spbac7fa->SetTimeStamp("{$spf5d4de}"); $spbac7fa->SetNonceStr(WxPayApi::getNonceStr()); $spbac7fa->SetPackage('prepay_id=' . $sp5ea06f['prepay_id']); $spbac7fa->SetSignType('MD5'); $spbac7fa->SetPaySign($spbac7fa->MakeSign()); $sp4235b9 = json_encode($spbac7fa->GetValues()); return $sp4235b9; } public function GetOpenidFromMp($spa40a85) { $spaf19c1 = $this->__CreateOauthUrlForOpenid($spa40a85); $sp03f466 = curl_init(); curl_setopt($sp03f466, CURLOPT_TIMEOUT, $this->curl_timeout); curl_setopt($sp03f466, CURLOPT_URL, $spaf19c1); curl_setopt($sp03f466, CURLOPT_SSL_VERIFYPEER, FALSE); curl_setopt($sp03f466, CURLOPT_SSL_VERIFYHOST, FALSE); curl_setopt($sp03f466, CURLOPT_HEADER, FALSE); curl_setopt($sp03f466, CURLOPT_RETURNTRANSFER, TRUE); if (WxPayConfig::CURL_PROXY_HOST != '0.0.0.0' && WxPayConfig::CURL_PROXY_PORT != 0) { curl_setopt($sp03f466, CURLOPT_PROXY, WxPayConfig::CURL_PROXY_HOST); curl_setopt($sp03f466, CURLOPT_PROXYPORT, WxPayConfig::CURL_PROXY_PORT); } $spb12888 = curl_exec($sp03f466); curl_close($sp03f466); $sp631d11 = json_decode($spb12888, true); $this->data = $sp631d11; $sp7a1bcc = $sp631d11['openid']; return $sp7a1bcc; } private function ToUrlParams($sp7c3041) { $sp167a8e = ''; foreach ($sp7c3041 as $sp467973 => $sp06d9c9) { if ($sp467973 != 'sign') { $sp167a8e .= $sp467973 . '=' . $sp06d9c9 . '&'; } } $sp167a8e = trim($sp167a8e, '&'); return $sp167a8e; } public function GetEditAddressParameters() { $sp5c32f3 = $this->data; $sp631d11 = array(); $sp631d11['appid'] = WxPayConfig::APPID; $sp631d11['url'] = 'http://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']; $sp0df43e = time(); $sp631d11['timestamp'] = "{$sp0df43e}"; $sp631d11['noncestr'] = '1234568'; $sp631d11['accesstoken'] = $sp5c32f3['access_token']; ksort($sp631d11); $sp5e6808 = $this->ToUrlParams($sp631d11); $sp7e660d = sha1($sp5e6808); $sp45c4c4 = array('addrSign' => $sp7e660d, 'signType' => 'sha1', 'scope' => 'jsapi_address', 'appId' => WxPayConfig::APPID, 'timeStamp' => $sp631d11['timestamp'], 'nonceStr' => $sp631d11['noncestr']); $sp4235b9 = json_encode($sp45c4c4); return $sp4235b9; } private function __CreateOauthUrlForCode($sp68de82) { $sp7c3041['appid'] = WxPayConfig::APPID; $sp7c3041['redirect_uri'] = "{$sp68de82}"; $sp7c3041['response_type'] = 'code'; $sp7c3041['scope'] = 'snsapi_base'; $sp7c3041['state'] = 'STATE' . '#wechat_redirect'; $sp8e2f70 = $this->ToUrlParams($sp7c3041); return 'https://open.weixin.qq.com/connect/oauth2/authorize?' . $sp8e2f70; } private function __CreateOauthUrlForOpenid($spa40a85) { $sp7c3041['appid'] = WxPayConfig::APPID; $sp7c3041['secret'] = WxPayConfig::APPSECRET; $sp7c3041['code'] = $spa40a85; $sp7c3041['grant_type'] = 'authorization_code'; $sp8e2f70 = $this->ToUrlParams($sp7c3041); return 'https://api.weixin.qq.com/sns/oauth2/access_token?' . $sp8e2f70; } }