<?php
ini_set('date.timezone', 'Asia/Shanghai'); error_reporting(E_ERROR); require_once '../lib/WxPay.Api.php'; require_once '../lib/WxPay.Notify.php'; require_once 'log.php'; $sp08ba31 = new CLogFileHandler('../logs/' . date('Y-m-d') . '.log'); $sp72b4d7 = Log::Init($sp08ba31, 15); class NativeNotifyCallBack extends WxPayNotify { public function unifiedorder($sp8dcb31, $sp18574f) { $spf7fa80 = new WxPayUnifiedOrder(); $spf7fa80->SetBody('test'); $spf7fa80->SetAttach('test'); $spf7fa80->SetOut_trade_no(WxPayConfig::MCHID . date('YmdHis')); $spf7fa80->SetTotal_fee('1'); $spf7fa80->SetTime_start(date('YmdHis')); $spf7fa80->SetTime_expire(date('YmdHis', time() + 600)); $spf7fa80->SetGoods_tag('test'); $spf7fa80->SetNotify_url('http://paysdk.weixin.qq.com/example/notify.php'); $spf7fa80->SetTrade_type('NATIVE'); $spf7fa80->SetOpenid($sp8dcb31); $spf7fa80->SetProduct_id($sp18574f); $sp594fbb = WxPayApi::unifiedOrder($spf7fa80); Log::DEBUG('unifiedorder:' . json_encode($sp594fbb)); return $sp594fbb; } public function NotifyProcess($sp631d11, &$sp32b59e) { Log::DEBUG('call back:' . json_encode($sp631d11)); if (!array_key_exists('openid', $sp631d11) || !array_key_exists('product_id', $sp631d11)) { $sp32b59e = '回调数据异常'; return false; } $sp7a1bcc = $sp631d11['openid']; $sp18574f = $sp631d11['product_id']; $sp594fbb = $this->unifiedorder($sp7a1bcc, $sp18574f); if (!array_key_exists('appid', $sp594fbb) || !array_key_exists('mch_id', $sp594fbb) || !array_key_exists('prepay_id', $sp594fbb)) { $sp32b59e = '统一下单失败'; return false; } $this->SetData('appid', $sp594fbb['appid']); $this->SetData('mch_id', $sp594fbb['mch_id']); $this->SetData('nonce_str', WxPayApi::getNonceStr()); $this->SetData('prepay_id', $sp594fbb['prepay_id']); $this->SetData('result_code', 'SUCCESS'); $this->SetData('err_code_des', 'OK'); return true; } } Log::DEBUG('begin notify!'); $spb965e6 = new NativeNotifyCallBack(); $spb965e6->Handle(true);