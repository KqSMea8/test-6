<?php
namespace App\Library\Pay\Youzan\Open; use Exception; class Client { private static $requestUrl = 'https://open.youzan.com/api/oauthentry/'; private $accessToken; public function __construct($sp286111) { if ('' == $sp286111) { throw new Exception('access_token不能为空'); } $this->accessToken = $sp286111; } public function get($spd92fdb, $spba8ce5, $sp5e6808 = array()) { return $this->parseResponse(Http::get($this->url($spd92fdb, $spba8ce5), $this->buildRequestParams($spd92fdb, $sp5e6808))); } public function post($spd92fdb, $spba8ce5, $sp5e6808 = array(), $sp9dc227 = array()) { return $this->parseResponse(Http::post($this->url($spd92fdb, $spba8ce5), $this->buildRequestParams($spd92fdb, $sp5e6808), $sp9dc227)); } public function url($spd92fdb, $spba8ce5) { $sp62cc3b = explode('.', $spd92fdb); $spd92fdb = '/' . $spba8ce5 . '/' . $sp62cc3b[count($sp62cc3b) - 1]; array_pop($sp62cc3b); $spd92fdb = implode('.', $sp62cc3b) . $spd92fdb; $spaf19c1 = self::$requestUrl . $spd92fdb; return $spaf19c1; } private function parseResponse($sp5fe47b) { $sp631d11 = json_decode($sp5fe47b, true); if (null === $sp631d11) { throw new Exception('response invalid, data: ' . $sp5fe47b); } return $sp631d11; } private function buildRequestParams($spd92fdb, $sp00ab6b) { if (!is_array($sp00ab6b)) { $sp00ab6b = array(); } $sp2f1eff = $this->getCommonParams($this->accessToken, $spd92fdb); foreach ($sp00ab6b as $sp467973 => $sp06d9c9) { if (isset($sp2f1eff[$sp467973])) { throw new Exception('参数名冲突'); } $sp2f1eff[$sp467973] = $sp06d9c9; } return $sp2f1eff; } private function getCommonParams($sp286111, $spd92fdb) { $sp5e6808 = array(); $sp5e6808[Protocol::TOKEN_KEY] = $sp286111; $sp5e6808[Protocol::METHOD_KEY] = $spd92fdb; return $sp5e6808; } }