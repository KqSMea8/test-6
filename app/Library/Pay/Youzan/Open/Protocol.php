<?php
namespace App\Library\Pay\Youzan\Open; class Protocol { const SIGN_KEY = 'sign'; const VERSION_KEY = 'v'; const APP_ID_KEY = 'app_id'; const METHOD_KEY = 'method'; const FORMAT_KEY = 'format'; const TOKEN_KEY = 'access_token'; const TIMESTAMP_KEY = 'timestamp'; const SIGN_METHOD_KEY = 'sign_method'; const ALLOWED_DEVIATE_SECONDS = 600; const ERR_SYSTEM = -1; const ERR_INVALID_APP_ID = 40001; const ERR_INVALID_APP = 40002; const ERR_INVALID_TIMESTAMP = 40003; const ERR_EMPTY_SIGNATURE = 40004; const ERR_INVALID_SIGNATURE = 40005; const ERR_INVALID_METHOD_NAME = 40006; const ERR_INVALID_METHOD = 40007; const ERR_INVALID_TEAM = 40008; const ERR_PARAMETER = 41000; const ERR_LOGIC = 50000; public static function sign($sp8fe06c, $sp5e6808, $spd92fdb = 'md5') { if (!is_array($sp5e6808)) { $sp5e6808 = array(); } ksort($sp5e6808); $sp30dc6c = ''; foreach ($sp5e6808 as $sp467973 => $sp06d9c9) { $sp30dc6c .= $sp467973 . $sp06d9c9; } return self::hash($spd92fdb, $sp8fe06c . $sp30dc6c . $sp8fe06c); } private static function hash($spd92fdb, $sp30dc6c) { switch ($spd92fdb) { case 'md5': default: $sp8d0c83 = md5($sp30dc6c); break; } return $sp8d0c83; } public static function allowedSignMethods() { return array('md5'); } public static function allowedFormat() { return array('json'); } }