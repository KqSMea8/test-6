<?php
require_once 'alipay_core.function.php'; require_once 'alipay_md5.function.php'; class AlipayNotify { var $https_verify_url = 'https://mapi.alipay.com/gateway.do?service=notify_verify&'; var $http_verify_url = 'http://notify.alipay.com/trade/notify_query.do?'; var $alipay_config; function __construct($spcef7af) { $this->alipay_config = $spcef7af; } function AlipayNotify($spcef7af) { $this->__construct($spcef7af); } function verifyNotify() { if (empty($_POST)) { return false; } else { $sp80c28f = $this->getSignVeryfy($_POST, $_POST['sign']); $spfa1310 = 'false'; if (!empty($_POST['notify_id'])) { $spfa1310 = $this->getResponse($_POST['notify_id']); } if (preg_match('/true$/i', $spfa1310) && $sp80c28f) { return true; } else { return false; } } } function verifyReturn() { if (empty($_GET)) { return false; } else { $sp80c28f = $this->getSignVeryfy($_GET, $_GET['sign']); $spfa1310 = 'false'; if (!empty($_GET['notify_id'])) { $spfa1310 = $this->getResponse($_GET['notify_id']); } if (preg_match('/true$/i', $spfa1310) && $sp80c28f) { return true; } else { return false; } } } function getSignVeryfy($spb3c003, $sp7b1c1e) { $spcd1f53 = paraFilter($spb3c003); $sp2f1dd7 = argSort($spcd1f53); $sp7bd489 = createLinkString($sp2f1dd7); $sp192ebf = false; switch (strtoupper(trim($this->alipay_config['sign_type']))) { case 'MD5': $sp192ebf = md5Verify($sp7bd489, $sp7b1c1e, $this->alipay_config['key']); break; default: $sp192ebf = false; } return $sp192ebf; } function getResponse($spa5459f) { $spb13955 = strtolower(trim($this->alipay_config['transport'])); $sp9f7409 = trim($this->alipay_config['partner']); $spb2ed3d = ''; if ($spb13955 == 'https') { $spb2ed3d = $this->https_verify_url; } else { $spb2ed3d = $this->http_verify_url; } $spb2ed3d = $spb2ed3d . 'partner=' . $sp9f7409 . '&notify_id=' . $spa5459f; $spfa1310 = getHttpResponseGET($spb2ed3d, $this->alipay_config['cacert']); return $spfa1310; } }