<?php
namespace App\Library\Pay\Aliqr; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; include 'Loader.php'; class Api implements ApiInterface { private $url_notify = ''; public function __construct($spae6a5b) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $spae6a5b; } private function defineConfig(&$sp42f333) { $sp42f333['sign_type'] = 'RSA2'; $sp42f333['charset'] = 'UTF-8'; $sp42f333['gatewayUrl'] = 'https://openapi.alipay.com/gateway.do'; $sp42f333['MaxQueryRetry'] = '10'; $sp42f333['QueryDuration'] = '3'; $sp42f333['notify_url'] = $this->url_notify; } function goPay($sp42f333, $sp79d97c, $spf49dcd, $spa1a573, $sp39c1e2) { $spda7912 = sprintf('%.2f', $sp39c1e2 / 100); $this->defineConfig($sp42f333); $sp1df6df = '5m'; $spf81667 = new \GoodsDetail(); $spf81667->setGoodsId('card'); $spf81667->setGoodsName($spf49dcd); $spf81667->setPrice($spda7912); $spf81667->setQuantity(1); $sp721a07 = $spf81667->getGoodsDetail(); $sp598203 = array($sp721a07); $sp1400b4 = ''; $sp4262de = new \AlipayTradePrecreateContentBuilder(); $sp4262de->setOutTradeNo($sp79d97c); $sp4262de->setTotalAmount($spda7912); $sp4262de->setTimeExpress($sp1df6df); $sp4262de->setSubject($spf49dcd); $sp4262de->setBody($spa1a573); $sp4262de->setGoodsDetailList($sp598203); $sp4262de->setAppAuthToken($sp1400b4); $spdf6533 = new \AlipayTradeService($sp42f333); $sp3b41a0 = $spdf6533->qrPay($sp4262de); switch ($sp3b41a0->getTradeStatus()) { case 'SUCCESS': $spf1d2fd = $sp3b41a0->getResponse(); header('location: /qrcode/pay/' . $sp79d97c . '/aliqr?url=' . urlencode($spf1d2fd->qr_code)); echo '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>正在跳转到支付渠道...</title></head><body><h1 style="text-align: center">正在跳转到支付渠道...</h1>'; die; break; case 'FAILED': if (!empty($sp3b41a0->getResponse())) { Log::error('Aliqr.goPay FAILED: 支付宝创建订单二维码失败: ' . serialize($sp3b41a0->getResponse())); throw new \Exception('支付宝创建订单二维码失败!!!<br>' . serialize($sp3b41a0->getResponse())); } else { Log::error('Aliqr.goPay FAILED: 支付宝创建订单二维码失败: 未知错误'); throw new \Exception('支付宝创建订单二维码失败!!!<br>未知错误'); } break; case 'UNKNOWN': if (!empty($sp3b41a0->getResponse())) { Log::error('Aliqr.goPay UNKNOWN: 支付宝创建订单二维码失败: ' . serialize($sp3b41a0->getResponse())); throw new \Exception('系统异常，状态未知!!!<br>' . serialize($sp3b41a0->getResponse())); } else { Log::error('Aliqr.goPay UNKNOWN: 系统异常，状态未知!!!: 未知错误'); throw new \Exception('系统异常，状态未知!!!<br>未知错误'); } break; default: throw new \Exception('不支持的返回状态，创建订单二维码返回异常!!!'); break; } } function verify($sp42f333, $sp7b72fc) { $spf1c6fe = isset($sp42f333['isNotify']) && $sp42f333['isNotify']; $this->defineConfig($sp42f333); $sp79d97c = trim(isset($sp42f333['out_trade_no']) ? $sp42f333['out_trade_no'] : $_REQUEST['out_trade_no']); $sp45a2b0 = new \AlipayTradeQueryContentBuilder(); $sp45a2b0->setOutTradeNo($sp79d97c); $sp803139 = new \AlipayTradeService($sp42f333); $sp31d422 = $sp803139->queryTradeResult($sp45a2b0); switch ($sp31d422->getTradeStatus()) { case 'SUCCESS': $spf1d2fd = $sp31d422->getResponse(); $sp649e9d = $spf1d2fd->trade_no; $sp1ae8d8 = (int) ($spf1d2fd->receipt_amount * 100); $sp7b72fc($sp79d97c, $sp1ae8d8, $sp649e9d); if ($spf1c6fe) { echo 'success'; } return true; break; case 'FAILED': if ($spf1c6fe) { echo 'failed'; } return false; break; case 'UNKNOWN': if ($spf1c6fe) { echo 'failed'; } return false; break; default: if ($spf1c6fe) { echo 'failed'; } return false; break; } } }