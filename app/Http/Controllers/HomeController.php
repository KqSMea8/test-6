<?php
namespace App\Http\Controllers; use App\Category; use App\Library\Helper; use App\Pay; use App\Product; use App\System; use App\User; use App\UserDomain; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Library\Geetest; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Cookie; class HomeController extends Controller { private function _shop_render($sp47ffde, $sp4366e7 = null, $spf667ee = null) { $sp42f333 = array('url' => config('app.url'), 'company' => System::_get('company'), 'name' => config('app.name'), 'logo' => System::_get('logo')); $sp42f333['shop'] = array('name' => config('app.name'), 'qq' => System::_get('shop_qq'), 'ann' => System::_get('shop_ann'), 'ann_pop' => System::_get('shop_ann_pop'), 'inventory' => System::_getInt('shop_inventory')); if ($spf667ee) { $sp42f333['categories'] = array($sp4366e7); $sp42f333['product'] = $spf667ee; $spdbb9e7 = $spf667ee->name . ' - ' . $sp42f333['name']; $spb87d3c = $spf667ee->description; if (@$spb87d3c[0] === '{') { $sp38c812 = array(); preg_match_all('/"insert":"(.+?)"/', $spb87d3c, $sp38c812); $spb87d3c = str_replace('\\n', ' ', @join(' ', $sp38c812[1])); } } elseif ($sp4366e7) { $sp42f333['categories'] = array($sp4366e7); $sp42f333['product'] = null; $spdbb9e7 = $sp4366e7->name . ' - ' . $sp42f333['name']; $spb87d3c = $sp4366e7->name; } else { $sp5fbd41 = Category::where('user_id', $sp47ffde->id)->orderBy('sort')->where('enabled', 1)->get(); foreach ($sp5fbd41 as $sp4366e7) { $sp4366e7->setVisible(array('id', 'name', 'password_open')); } $sp42f333['categories'] = $sp5fbd41; $spdbb9e7 = $sp42f333['name']; $spb87d3c = $sp42f333['shop']['ann']; if (@$spb87d3c[0] === '{') { $sp38c812 = array(); preg_match_all('/"insert":"(.+?)"/', $spb87d3c, $sp38c812); $spb87d3c = str_replace('\\n', ' ', @join(' ', $sp38c812[1])); } } $sp42f333['vcode'] = array('driver' => System::_get('vcode_driver'), 'buy' => (int) System::_get('vcode_shop_buy'), 'search' => (int) System::_get('vcode_shop_search')); if ($sp42f333['vcode']['driver'] === 'geetest' && ($sp42f333['vcode'] || $sp42f333['search'])) { $sp42f333['vcode']['geetest'] = Geetest\API::get(); } $sp42f333['pays'] = Pay::whereRaw('enabled&' . (self::is_mobile() ? Pay::ENABLED_MOBILE : Pay::ENABLED_PC) . '!=0')->orderBy('sort')->get(array('id', 'name', 'img')); $spb7cd9b = Cookie::get('customer'); $spf4f2b2 = Cookie::make('customer', strlen($spb7cd9b) !== 32 ? md5(str_random(16)) : $spb7cd9b, 43200, null, null, false, false); $speb4bb0 = null; if (isset($_GET['theme'])) { $speb4bb0 = \App\ShopTheme::whereName($_GET['theme'])->first(); } if (!$speb4bb0) { $speb4bb0 = \App\ShopTheme::defaultTheme(); } $sp42f333['theme'] = $sp47ffde->theme_config && isset($sp47ffde->theme_config[$speb4bb0->name]) ? $sp47ffde->theme_config[$speb4bb0->name] : $speb4bb0->config; return response()->view('shop_theme.' . $speb4bb0->name . '.index', array('name' => $spdbb9e7, 'title' => config('app.title'), 'keywords' => preg_replace('/[、，；。！？]/', ', ', $spdbb9e7), 'description' => $spb87d3c, 'js_tj' => System::_get('js_tj'), 'js_kf' => System::_get('js_kf'), 'config' => $sp42f333))->cookie($spf4f2b2); } private function _shop_404() { $this->checkIsInMaintain(); return view('message', array('title' => '404 NotFound', 'message' => '该链接不存在<br>
<a style="font-size: 18px" href="/s/#/record">查询订单</a>')); } public function shop_default(Request $sp2f63b0) { $sp3e3c94 = $sp2f63b0->get('tab', ''); return response()->redirectTo('/?theme=Material#/record?tab=' . $sp3e3c94); } public function shop_category($sp38f290) { $this->checkIsInMaintain(); $sp4366e7 = Category::whereId(Helper::id_decode($sp38f290, Helper::ID_TYPE_CATEGORY))->with('user')->first(); if (!$sp4366e7 && is_numeric($sp4366e7)) { $sp4366e7 = Category::whereId($sp38f290)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with('user')->first(); } if (!$sp4366e7) { return $this->_shop_404(); } $sp4366e7->setVisible(array('id', 'name', 'password_open')); return $this->_shop_render($sp4366e7->user, $sp4366e7); } public function shop_product(Request $sp2f63b0, $sp1af00f) { $this->checkIsInMaintain(); $spf667ee = Product::whereId(Helper::id_decode($sp1af00f, Helper::ID_TYPE_PRODUCT))->with(array('user', 'category', 'cards' => function (Relation $spd92986) { $spd92986->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->first(); if (!$spf667ee && is_numeric($sp1af00f)) { $spf667ee = Product::whereId($sp1af00f)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with(array('user', 'category', 'cards' => function (Relation $spd92986) { $spd92986->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->first(); } if (!$spf667ee || !$spf667ee->category) { return $this->_shop_404(); } if ($spf667ee->password_open && $spf667ee->password !== $sp2f63b0->input('p')) { return view('message', array('title' => '出错', 'message' => ($sp2f63b0->has('p') ? '密码错误' : '请输入密码') . '<br>
<div style="font-size: 14px">
<input id="password" type="password" style="display: block; margin: 8px 0 8px 0">
<button onclick="location.href=location.href.split(\'?\')[0]+\'?p=\'+encodeURI(document.getElementById(\'password\').value)">确认</button>
</div>
')); } $spf667ee->category->setVisible(array('id', 'name', 'password_open')); $sp761f2d = count($spf667ee->cards) ? $spf667ee->cards[0]->count : 0; if ($spf667ee->user->shop_inventory == \App\User::inventory_range) { if ($sp761f2d <= 0) { $sp89a95a = '不足'; } elseif ($sp761f2d <= 10) { $sp89a95a = '少量'; } elseif ($sp761f2d <= 20) { $sp89a95a = '一般'; } else { $sp89a95a = '大量'; } $spf667ee->setAttribute('count2', $sp89a95a); } else { $spf667ee->setAttribute('count2', $sp761f2d); } $spf667ee->setAttribute('count', $sp761f2d); $spf667ee->setVisible(array('id', 'name', 'description', 'count', 'count2', 'buy_min', 'buy_max', 'support_coupon', 'password_open', 'price', 'price_whole')); return $this->_shop_render($spf667ee->user, $spf667ee->category, $spf667ee); } public function shop() { $this->checkIsInMaintain(); $sp47ffde = User::firstOrFail(); return $this->_shop_render($sp47ffde); } public function admin() { $sp42f333 = array(); $sp42f333['url'] = config('app.url'); $sp42f333['vcode'] = array('driver' => System::_get('vcode_driver'), 'login' => (int) System::_get('vcode_login')); if ($sp42f333['vcode']['driver'] === 'geetest') { $sp42f333['vcode']['geetest'] = Geetest\API::get(); } return view('admin', array('config' => $sp42f333)); } }