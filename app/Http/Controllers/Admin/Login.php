<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Geetest; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Hash; class Login extends Controller { function getVerify() { $sp3a5298 = array('driver' => 'geetest', 'geetest' => Geetest\API::get()); return Response::success($sp3a5298); } public function login(Request $sp2f63b0) { $sp65f5e3 = $sp2f63b0->input('remember') == 'true'; if (!Auth::attempt(array('email' => $sp2f63b0->input('email'), 'password' => $sp2f63b0->input('password')), $sp65f5e3)) { return Response::fail('邮箱或密码错误, 请检查'); } else { $sp72b4d7 = new \App\Log(); $sp72b4d7->user_id = Auth::Id(); $sp72b4d7->ip = Helper::getIP(); $sp72b4d7->action = \App\Log::ACTION_LOGIN; $sp72b4d7->save(); $sp47ffde = Auth::getUser(); $sp47ffde->addHidden(array('created_at', 'updated_at')); return Response::success(array('token' => 'login', 'user' => $sp47ffde->toArray())); } } function info() { $sp47ffde = Auth::getUser(); $sp47ffde->addHidden(array('created_at', 'updated_at')); return Response::success(array('token' => 'login', 'user' => $sp47ffde->toArray())); } function logout(Request $sp2f63b0) { Auth::logout(); return Response::success(); } function changePassword(Request $sp2f63b0) { $sp47ffde = Auth::getUser(); $sp406cfb = $sp2f63b0->post('old', null); $sp4f77a3 = $sp2f63b0->post('password', null); if (strlen($sp4f77a3) < 6 || strlen($sp4f77a3) > 32) { return Response::fail('请输入6-32位密码'); } if (!Hash::check($sp406cfb, $sp47ffde->password)) { return Response::fail('旧密码错误，请检查'); } $sp47ffde->password = bcrypt($sp4f77a3); $sp47ffde->saveOrFail(); return Response::success(); } }