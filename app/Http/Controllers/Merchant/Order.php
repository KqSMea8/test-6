<?php
namespace App\Http\Controllers\Merchant; use App\Http\Controllers\Shop\ApiPay; use App\Library\CurlRequest; use App\Library\FundHelper; use App\Library\Helper; use App\Library\Response; use App\Mail\OrderShipped; use App\System; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Mail; class Order extends Controller { function get(Request $sp2f63b0) { $spd92986 = $this->authQuery($sp2f63b0, \App\Order::class); $sp97f886 = (int) $sp2f63b0->post('category_id'); $sp18574f = (int) $sp2f63b0->post('product_id'); $sp0cd2aa = (int) $sp2f63b0->post('profit'); $spa61202 = $sp97f886 === \App\Product::ID_API || $sp18574f === \App\Product::ID_API; $sp11a77c = $sp2f63b0->post('search', false); $sp971b24 = $sp2f63b0->post('val', false); if ($sp11a77c && $sp971b24) { if ($sp11a77c == 'id' || $sp11a77c == 'order_no' || $sp11a77c === 'pay_trade_no' || $sp11a77c === 'api_out_no') { $spd92986->where($sp11a77c, $sp971b24); } else { $spd92986->where($sp11a77c, 'like', '%' . $sp971b24 . '%'); } } if ($sp97f886 > 0) { if ($sp18574f > 0) { $spd92986->where('product_id', $sp18574f); } else { $spd92986->whereHas('product', function ($spd92986) use($sp97f886) { $spd92986->where('category_id', $sp97f886); }); } } $sp15f986 = (int) $sp2f63b0->post('recent', 0); if ($sp15f986) { $sp744a2c = (new Carbon())->addDay(-$sp15f986); $spd92986->where('paid_at', '>=', $sp744a2c); } else { $sp744a2c = $sp2f63b0->post('start_at', false); if (strlen($sp744a2c)) { $spd92986->where('paid_at', '>=', $sp744a2c . ' 00:00:00'); } $sp6e7f6f = $sp2f63b0->post('end_at', false); if (strlen($sp6e7f6f)) { $spd92986->where('paid_at', '<=', $sp6e7f6f . ' 23:59:59'); } } if ($sp0cd2aa) { $spd92986->where('status', \App\Order::STATUS_SUCCESS); $sp6f2354 = clone $spd92986; $sp117706 = $sp6f2354->selectRaw('SUM(`income`) as income, SUM(`income`-`cost`) as profit')->first(); } else { $sp17830c = $sp2f63b0->post('status'); if (strlen($sp17830c)) { $spd92986->whereIn('status', explode(',', $sp17830c)); } else { $spd92986->where('status', '!=', \App\Order::STATUS_UNPAY); } if ($spa61202) { $spd92986->where('product_id', \App\Product::ID_API); } else { $spd92986->where('product_id', '>', 0); $spd92986->with(array('product' => function (Relation $spd92986) { $spd92986->select(array('id', 'name')); }, 'card_orders.card' => function (Relation $spd92986) { $spd92986->select(array('id', 'card')); })); } } $spd92986->with(array('pay' => function (Relation $spd92986) { $spd92986->select(array('id', 'name')); })); $sp5ea5e7 = $sp2f63b0->post('current_page', 1); $sp67decc = $sp2f63b0->post('per_page', 20); $sp176180 = $spd92986->orderBy('id', 'DESC')->paginate($sp67decc, array('*'), 'page', $sp5ea5e7); if ($sp0cd2aa) { $sp176180 = $sp176180->toArray(); $sp176180['profit_sum'] = $sp117706; } return Response::success($sp176180); } function stat(Request $sp2f63b0) { $spbaca1e = (int) $sp2f63b0->input('day', 7); $sp176180 = $this->authQuery($sp2f63b0, \App\Order::class)->where(function ($spd92986) { $spd92986->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', Helper::getMysqlDate(-$spbaca1e + 1))->groupBy('date')->orderBy('date', 'DESC')->selectRaw('DATE(`paid_at`) as "date",COUNT(*) as "count",SUM(`income`) as "sum"')->get()->toArray(); $sp7210a9 = array(); foreach ($sp176180 as $sp795ea1) { $sp7210a9[$sp795ea1['date']] = array((int) $sp795ea1['count'], (int) $sp795ea1['sum']); } return Response::success($sp7210a9); } function info(Request $sp2f63b0) { $spae6a5b = (int) $sp2f63b0->post('id'); if (!$spae6a5b) { return Response::forbidden(); } $sp871a53 = $this->authQuery($sp2f63b0, \App\Order::class)->with(array('pay' => function (Relation $spd92986) { $spd92986->select(array('id', 'name')); }, 'card_orders.card' => function (Relation $spd92986) { $spd92986->select(array('id', 'card')); }))->findOrFail($spae6a5b); $sp871a53->addHidden(array('system_fee')); return Response::success($sp871a53); } function remark(Request $sp2f63b0) { $spae6a5b = (int) $sp2f63b0->post('id'); if (!$spae6a5b) { return Response::forbidden(); } $sp871a53 = $this->authQuery($sp2f63b0, \App\Order::class)->findOrFail($spae6a5b); $sp871a53->remark = $sp2f63b0->post('remark'); $sp871a53->save(); return Response::success(); } function ship(Request $sp2f63b0) { $this->validate($sp2f63b0, array('id' => 'required|integer')); $sp871a53 = $this->authQuery($sp2f63b0, \App\Order::class)->findOrFail($sp2f63b0->post('id')); if ($sp871a53->status !== \App\Order::STATUS_PAID) { return Response::fail('订单不是待发货状态, 无法发货'); } $sp19a5c6 = null; if (FundHelper::orderSuccess($sp871a53, function () use(&$sp871a53, &$sp19a5c6) { $sp871a53 = \App\Order::where('id', $sp871a53->id)->lockForUpdate()->firstOrFail(); if ($sp871a53->cards && count($sp871a53->cards)) { $sp19a5c6 = '该订单已经发货，无需再次发货'; return false; } $spddebb7 = \App\Card::where('product_id', $sp871a53->product_id)->whereRaw('`count_sold`<`count_all`')->take($sp871a53->count)->lockForUpdate()->get(); if (count($spddebb7) !== $sp871a53->count) { $sp19a5c6 = '商品卡密不足, 请添加卡密后再发货'; return false; } else { $sp871a53->status = \App\Order::STATUS_SUCCESS; $sp871a53->saveOrFail(); $sp40e013 = array(); $spa6ee3c = ''; $sp3fc9da = array(); foreach ($spddebb7 as $sp32a040) { $spa6ee3c .= $sp32a040->card . '<br>'; $sp40e013[] = $sp32a040->id; $sp3fc9da[] = array('card' => $sp32a040->card); } $sp871a53->cards()->attach($sp40e013); \App\Card::whereIn('id', $sp40e013)->update(array('status' => \App\Card::STATUS_SOLD, 'count_sold' => DB::raw('`count_sold`+1'))); $spfe9442 = '订单#' . $sp871a53->order_no . '&nbsp;已支付，卡号列表：'; $spd5f824 = str_replace('
', '<br>', $spa6ee3c); try { \Mail::to($sp871a53->email)->Queue(new OrderShipped($sp871a53, $spfe9442, $spd5f824)); $sp871a53->email_sent = true; $sp871a53->saveOrFail(); } catch (\Exception $spa9e936) { \App\Library\LogHelper::setLogFile('mail'); \Log::error('Order.ship error, order_no:' . $sp871a53->order_no . ', email:' . $sp871a53->email . ', cards:' . $spd5f824 . ', Exception:' . $spa9e936->getMessage()); \App\Library\LogHelper::setLogFile('card'); } $sp871a53->addHidden(array('system_fee')); $sp871a53 = $sp871a53->toArray(); $sp871a53['cards'] = $sp3fc9da; return \App\Order::STATUS_SUCCESS; } })) { if (!$sp19a5c6) { return Response::success($sp871a53); } else { return Response::fail($sp19a5c6 ? $sp19a5c6 : '未知错误'); } } else { \Log::error('Order.ship error, order_no:' . $sp871a53->order_no); return Response::fail($sp19a5c6 ? $sp19a5c6 : '数据库繁忙, 请联系客服'); } } }