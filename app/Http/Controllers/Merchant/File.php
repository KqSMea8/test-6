<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp52e5cb, $sp203bcb, $sp164b98, $spd765ca = false) { if (!$sp52e5cb || !in_array(strtolower($sp52e5cb->extension()), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp52e5cb->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $spd0fd48 = $sp52e5cb->store($sp164b98, array('disk' => System::_get('storage_driver'))); } catch (\Exception $spa9e936) { \Log::error('File.uploadImg folder:' . $sp164b98 . ', error:' . $spa9e936->getMessage(), array('exception' => $spa9e936)); if (config('app.debug')) { return Response::fail($spa9e936->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$spd0fd48) { return Response::fail('系统保存文件出错, 请稍后再试'); } $spa2a84a = System::_get('storage_driver'); $spaf19c1 = Storage::disk($spa2a84a)->url($spd0fd48); $sp043003 = \App\File::insertGetId(array('user_id' => $sp203bcb, 'driver' => $spa2a84a, 'path' => $spd0fd48, 'url' => $spaf19c1)); if ($sp043003 < 1) { Storage::disk($spa2a84a)->delete($spd0fd48); return Response::fail('数据库繁忙，请稍后再试'); } $sp7210a9 = array('id' => $sp043003, 'url' => $spaf19c1, 'name' => pathinfo($spd0fd48, PATHINFO_BASENAME)); if ($spd765ca) { return $sp7210a9; } return Response::success($sp7210a9); } function upload_merchant(Request $sp2f63b0) { $sp47ffde = $this->getUser($sp2f63b0); if ($sp47ffde === null) { return Response::forbidden('无效的用户'); } $sp52e5cb = $sp2f63b0->file('file'); return $this->uploadImg($sp52e5cb, $sp47ffde->id, \App\File::getProductFolder()); } public function renderImage(Request $sp2f63b0, $sp24023d) { if (str_contains($sp24023d, '..') || str_contains($sp24023d, './') || str_contains($sp24023d, '.\\') || !starts_with($sp24023d, 'images/')) { $sp12d264 = file_get_contents(public_path('images/illegal.jpg')); } else { $sp24023d = str_replace('\\', '/', $sp24023d); $sp52e5cb = \App\File::wherePath($sp24023d)->first(); if ($sp52e5cb) { $spa2a84a = $sp52e5cb->driver; } else { $spa2a84a = System::_get('storage_driver'); } if (!in_array($spa2a84a, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp12d264 = Storage::disk($spa2a84a)->get($sp24023d); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $spa9e936) { \Log::error('File.renderImage error: ' . $spa9e936->getMessage(), array('exception' => $spa9e936)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp24023d)); die($sp12d264); } }