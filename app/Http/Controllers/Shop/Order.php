<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $sp2f63b0) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp7210a9 = Geetest\API::verify($sp2f63b0->post('geetest_challenge'), $sp2f63b0->post('geetest_validate'), $sp2f63b0->post('geetest_seccode')); if (!$sp7210a9) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $spd92986 = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-30)); $sp9265a0 = $sp2f63b0->post('type', ''); if ($sp9265a0 === 'cookie') { $spb7cd9b = Cookie::get('customer'); if (strlen($spb7cd9b) !== 32) { return Response::success(); } $spd92986->where('customer', $spb7cd9b); } elseif ($sp9265a0 === 'order_no') { $spd58066 = $sp2f63b0->post('order_no', ''); if (strlen($spd58066) !== 19) { return Response::success(); } $spd92986->where('order_no', $spd58066); } elseif ($sp9265a0 === 'email') { $spbe187f = $sp2f63b0->post('email', ''); if (strlen($spbe187f) < 6) { return Response::success(); } $spd92986->where('email', $spbe187f); } else { return Response::fail('请选择查询类型'); } $sp176180 = $spd92986->with(array('card_orders.card' => function (Relation $spd92986) { $spd92986->select(array('id', 'card')); }))->orderBy('id', 'DESC')->get(array('id', 'created_at', 'order_no', 'email', 'status', 'count', 'paid')); $sp05d455 = ''; return Response::success(array('list' => $sp176180, 'msg' => count($sp176180) ? $sp05d455 : '')); } }