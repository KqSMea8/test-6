<?php
namespace App\Http\Controllers\Shop; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Product extends Controller { function get(Request $sp2f63b0) { $sp97f886 = (int) $sp2f63b0->post('category_id'); if (!$sp97f886) { return Response::forbidden('请选择商品分类'); } $sp4366e7 = \App\Category::where('id', $sp97f886)->first(); if (!$sp4366e7) { return Response::forbidden('商品分类未找到'); } if ($sp4366e7->password_open && $sp2f63b0->post('password') !== $sp4366e7->password) { return Response::fail('分类密码输入错误'); } $spae7cdc = \App\Product::where('category_id', $sp97f886)->where('enabled', 1)->with(array('cards' => function (Relation $spd92986) { $spd92986->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->orderBy('sort')->get(); foreach ($spae7cdc as $spf667ee) { $sp761f2d = count($spf667ee->cards) ? intval($spf667ee->cards[0]->count) : 0; if ($sp4366e7->user->shop_inventory == \App\User::inventory_range) { if ($sp761f2d <= 0) { $sp89a95a = '不足'; } elseif ($sp761f2d <= 10) { $sp89a95a = '少量'; } elseif ($sp761f2d <= 20) { $sp89a95a = '一般'; } else { $sp89a95a = '大量'; } $spf667ee->setAttribute('count2', $sp89a95a); } else { $spf667ee->setAttribute('count2', $sp761f2d); } $spf667ee->setAttribute('count', $sp761f2d); $spf667ee->setVisible(array('id', 'name', 'description', 'count', 'count2', 'buy_min', 'buy_max', 'support_coupon', 'password_open', 'price', 'price_whole')); } return Response::success($spae7cdc); } function verifyPassword(Request $sp2f63b0) { $sp18574f = (int) $sp2f63b0->post('product_id'); if (!$sp18574f) { return Response::forbidden('请选择商品'); } $spf667ee = \App\Product::where('id', $sp18574f)->first(); if (!$spf667ee) { return Response::forbidden('商品未找到'); } if ($spf667ee->password_open && $sp2f63b0->post('password') !== $spf667ee->password) { return Response::fail('商品密码输入错误'); } return Response::success(); } }