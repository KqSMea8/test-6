<?php
require_once __DIR__ . '/../autoload.php'; use Qiniu\Auth; use Qiniu\Storage\UploadManager; $accessKey = getenv('QINIU_ACCESS_KEY'); $secretKey = getenv('QINIU_SECRET_KEY'); $bucket = getenv('QINIU_TEST_BUCKET'); $pipeline = 'sdktest'; $auth = new Auth($accessKey, $secretKey); $token = $auth->uploadToken($bucket); $uploadMgr = new UploadManager(); list($ret, $err) = $uploadMgr->put($token, null, 'content string'); echo "\n====> put result: \n"; if ($err !== null) { var_dump($err); } else { var_dump($ret); } $filePath = './php-logo.png'; $key = 'php-logo.png'; list($ret, $err) = $uploadMgr->putFile($token, $key, $filePath); echo "\n====> putFile result: \n"; if ($err !== null) { var_dump($err); } else { var_dump($ret); } $policy = array( 'callbackUrl' => 'http://172.30.251.210/upload_verify_callback.php', 'callbackBody' => 'filename=$(fname)&filesize=$(fsize)' ); $token = $auth->uploadToken($bucket, null, 3600, $policy); list($ret, $err) = $uploadMgr->putFile($token, null, $key); echo "\n====> putFile result: \n"; if ($err !== null) { var_dump($err); } else { var_dump($ret); } $wmImg = Qiniu\base64_urlSafeEncode('http://devtools.qiniudn.com/qiniu.png'); $pfop = "avthumb/m3u8/wmImage/$wmImg"; $notifyUrl = 'http://notify.fake.com'; $policy = array( 'persistentOps' => $pfop, 'persistentNotifyUrl' => $notifyUrl, 'persistentPipeline' => $pipeline ); $token = $auth->uploadToken($bucket, null, 3600, $policy); print($token); list($ret, $err) = $uploadMgr->putFile($token, null, $key); echo "\n====> putFile result: \n"; if ($err !== null) { var_dump($err); } else { var_dump($ret); } 