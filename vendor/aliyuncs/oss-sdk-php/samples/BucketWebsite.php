<?php
require_once __DIR__ . '/Common.php'; use OSS\OssClient; use OSS\Core\OssException; use OSS\Model\WebsiteConfig; $bucket = Common::getBucketName(); $ossClient = Common::getOssClient(); if (is_null($ossClient)) exit(1); $websiteConfig = new WebsiteConfig("index.html", "error.html"); $ossClient->putBucketWebsite($bucket, $websiteConfig); Common::println("bucket $bucket websiteConfig created:" . $websiteConfig->serializeToXml()); $websiteConfig = $ossClient->getBucketWebsite($bucket); Common::println("bucket $bucket websiteConfig fetched:" . $websiteConfig->serializeToXml()); $ossClient->deleteBucketWebsite($bucket); Common::println("bucket $bucket websiteConfig deleted"); putBucketWebsite($ossClient, $bucket); getBucketWebsite($ossClient, $bucket); deleteBucketWebsite($ossClient, $bucket); getBucketWebsite($ossClient, $bucket); function putBucketWebsite($ossClient, $bucket) { $websiteConfig = new WebsiteConfig("index.html", "error.html"); try { $ossClient->putBucketWebsite($bucket, $websiteConfig); } catch (OssException $e) { printf(__FUNCTION__ . ": FAILED\n"); printf($e->getMessage() . "\n"); return; } print(__FUNCTION__ . ": OK" . "\n"); } function getBucketWebsite($ossClient, $bucket) { $websiteConfig = null; try { $websiteConfig = $ossClient->getBucketWebsite($bucket); } catch (OssException $e) { printf(__FUNCTION__ . ": FAILED\n"); printf($e->getMessage() . "\n"); return; } print(__FUNCTION__ . ": OK" . "\n"); print($websiteConfig->serializeToXml() . "\n"); } function deleteBucketWebsite($ossClient, $bucket) { try { $ossClient->deleteBucketWebsite($bucket); } catch (OssException $e) { printf(__FUNCTION__ . ": FAILED\n"); printf($e->getMessage() . "\n"); return; } print(__FUNCTION__ . ": OK" . "\n"); } 