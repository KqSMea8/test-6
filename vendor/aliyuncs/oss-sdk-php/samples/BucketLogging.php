<?php
require_once __DIR__ . '/Common.php'; use OSS\OssClient; use OSS\Core\OssException; $bucket = Common::getBucketName(); $ossClient = Common::getOssClient(); if (is_null($ossClient)) exit(1); $ossClient->putBucketLogging($bucket, $bucket, "access.log", array()); Common::println("bucket $bucket lifecycleConfig created"); $loggingConfig = $ossClient->getBucketLogging($bucket, array()); Common::println("bucket $bucket lifecycleConfig fetched:" . $loggingConfig->serializeToXml()); $loggingConfig = $ossClient->getBucketLogging($bucket, array()); Common::println("bucket $bucket lifecycleConfig deleted"); putBucketLogging($ossClient, $bucket); getBucketLogging($ossClient, $bucket); deleteBucketLogging($ossClient, $bucket); getBucketLogging($ossClient, $bucket); function putBucketLogging($ossClient, $bucket) { $option = array(); $targetBucket = $bucket; $targetPrefix = "access.log"; try { $ossClient->putBucketLogging($bucket, $targetBucket, $targetPrefix, $option); } catch (OssException $e) { printf(__FUNCTION__ . ": FAILED\n"); printf($e->getMessage() . "\n"); return; } print(__FUNCTION__ . ": OK" . "\n"); } function getBucketLogging($ossClient, $bucket) { $loggingConfig = null; $options = array(); try { $loggingConfig = $ossClient->getBucketLogging($bucket, $options); } catch (OssException $e) { printf(__FUNCTION__ . ": FAILED\n"); printf($e->getMessage() . "\n"); return; } print(__FUNCTION__ . ": OK" . "\n"); print($loggingConfig->serializeToXml() . "\n"); } function deleteBucketLogging($ossClient, $bucket) { try { $ossClient->deleteBucketLogging($bucket); } catch (OssException $e) { printf(__FUNCTION__ . ": FAILED\n"); printf($e->getMessage() . "\n"); return; } print(__FUNCTION__ . ": OK" . "\n"); } 