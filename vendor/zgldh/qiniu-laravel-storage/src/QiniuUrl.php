<?php namespace zgldh\QiniuStorage; use JsonSerializable; class QiniuUrl implements JsonSerializable { private $url = null; private $parameters = []; public function __construct($url) { $this->url = $url; } public function __toString() { $url = trim($this->getUrl(), '?&'); $parameters = $this->getParameters(); $parameterString = join('&', $parameters); if ($parameterString) { if (strrpos($url, '?') === false) { $url .= '?' . $parameterString; } else { $url .= '&' . $parameterString; } } if (is_string($url) === false) { return ''; } return $url; } public function getUrl() { return $this->url; } public function setUrl($url) { $this->url = $url; } public function getDownload() { return $this->getParameter('download'); } public function setDownload($download) { return $this->setParameter('download', urlencode($download)); } public function getParameter($name) { return $this->parameters[$name]; } public function getParameters() { return $this->parameters; } public function setParameter($name, $value) { $this->parameters[$name] = $name . '/' . $value; return $this; } function jsonSerialize() { return $this->__toString(); } } 