<?php
 namespace Predis\Session; use Predis\ClientInterface; class Handler implements \SessionHandlerInterface { protected $client; protected $ttl; public function __construct(ClientInterface $client, array $options = array()) { $this->client = $client; if (isset($options['gc_maxlifetime'])) { $this->ttl = (int) $options['gc_maxlifetime']; } else { $this->ttl = ini_get('session.gc_maxlifetime'); } } public function register() { if (PHP_VERSION_ID >= 50400) { session_set_save_handler($this, true); } else { session_set_save_handler( array($this, 'open'), array($this, 'close'), array($this, 'read'), array($this, 'write'), array($this, 'destroy'), array($this, 'gc') ); } } public function open($save_path, $session_id) { return true; } public function close() { return true; } public function gc($maxlifetime) { return true; } public function read($session_id) { if ($data = $this->client->get($session_id)) { return $data; } return ''; } public function write($session_id, $session_data) { $this->client->setex($session_id, $this->ttl, $session_data); return true; } public function destroy($session_id) { $this->client->del($session_id); return true; } public function getClient() { return $this->client; } public function getMaxLifeTime() { return $this->ttl; } } 