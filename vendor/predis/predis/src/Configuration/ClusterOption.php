<?php
 namespace Predis\Configuration; use Predis\Connection\Aggregate\ClusterInterface; use Predis\Connection\Aggregate\PredisCluster; use Predis\Connection\Aggregate\RedisCluster; class ClusterOption implements OptionInterface { protected function createByDescription(OptionsInterface $options, $id) { switch ($id) { case 'predis': case 'predis-cluster': return new PredisCluster(); case 'redis': case 'redis-cluster': return new RedisCluster($options->connections); default: return; } } public function filter(OptionsInterface $options, $value) { if (is_string($value)) { $value = $this->createByDescription($options, $value); } if (!$value instanceof ClusterInterface) { throw new \InvalidArgumentException( "An instance of type 'Predis\Connection\Aggregate\ClusterInterface' was expected." ); } return $value; } public function getDefault(OptionsInterface $options) { return new PredisCluster(); } } 