<?php
 namespace Predis\Configuration; use Predis\Connection\Factory; use Predis\Connection\FactoryInterface; class ConnectionFactoryOption implements OptionInterface { public function filter(OptionsInterface $options, $value) { if ($value instanceof FactoryInterface) { return $value; } elseif (is_array($value)) { $factory = $this->getDefault($options); foreach ($value as $scheme => $initializer) { $factory->define($scheme, $initializer); } return $factory; } else { throw new \InvalidArgumentException( 'Invalid value provided for the connections option.' ); } } public function getDefault(OptionsInterface $options) { $factory = new Factory(); if ($options->defined('parameters')) { $factory->setDefaultParameters($options->parameters); } return $factory; } } 