<?php
 namespace Predis\Command; class RawCommand implements CommandInterface { private $slot; private $commandID; private $arguments; public function __construct(array $arguments) { if (!$arguments) { throw new \InvalidArgumentException( 'The arguments array must contain at least the command ID.' ); } $this->commandID = strtoupper(array_shift($arguments)); $this->arguments = $arguments; } public static function create($commandID ) { $arguments = func_get_args(); $command = new self($arguments); return $command; } public function getId() { return $this->commandID; } public function setArguments(array $arguments) { $this->arguments = $arguments; unset($this->slot); } public function setRawArguments(array $arguments) { $this->setArguments($arguments); } public function getArguments() { return $this->arguments; } public function getArgument($index) { if (isset($this->arguments[$index])) { return $this->arguments[$index]; } } public function setSlot($slot) { $this->slot = $slot; } public function getSlot() { if (isset($this->slot)) { return $this->slot; } } public function parseResponse($data) { return $data; } } 